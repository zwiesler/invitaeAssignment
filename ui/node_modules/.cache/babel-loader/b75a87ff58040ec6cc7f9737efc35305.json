{"ast":null,"code":"import _classCallCheck from \"/Users/zachary/home/personal/code/invitae/variant-search-api/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zachary/home/personal/code/invitae/variant-search-api/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/zachary/home/personal/code/invitae/variant-search-api/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zachary/home/personal/code/invitae/variant-search-api/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/zachary/home/personal/code/invitae/variant-search-api/ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/zachary/home/personal/code/invitae/variant-search-api/ui/src/components/VariantTable/VariantTable.js\";\nimport React, { Component } from 'react';\nimport { Table, Loader } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom'; // components\n\nimport { geneCol, dnaChangeCol, proteinCol, aliasCol, regionCol, reportedClassCol, lastEvalCol, lastUpdateCol, urlCol, sourceCol } from '../../util/Settings';\nimport VariantTableHeaderCell from './VariantTableHeaderCell';\nimport { DefaultVariantTableBodyCell, VariantTableLinkCell } from './VariantTableBodyCell';\nimport API from '../../util/API';\n\nvar VariantTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VariantTable, _Component);\n\n  function VariantTable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VariantTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VariantTable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      variantData: null\n    };\n\n    _this.componentDidMount = function () {\n      if (_this.props.variantData === null) {\n        API.variantTable().getDefault().then(function (response) {\n          _this.setState({\n            isLoading: false,\n            variantData: response.data.variant_data\n          });\n        });\n      } else {\n        _this.setState({\n          isLoading: false\n        });\n      }\n    };\n\n    _this.componentDidUpdate = function (prevProps) {\n      if (_this.props.variantData !== prevProps.variantData) {\n        _this.setState({\n          isLoading: false,\n          variantData: _this.props.variantData\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(VariantTable, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          variantData = _this$state.variantData;\n\n      if (isLoading) {\n        return React.createElement(Loader, {\n          active: true,\n          size: \"massive\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Table, {\n        sortable: true,\n        compact: true,\n        celled: true,\n        selectable: true,\n        striped: true,\n        size: \"small\",\n        style: {\n          padding: '0 25px 0 25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Table.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(VariantTableHeaderCell, {\n        name: \"GENE\",\n        width: \"3%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"NUCLEOTIDE CHANGE\",\n        width: \"8%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"PROTEIN CHANGE\",\n        width: \"8%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"ALIAS\",\n        width: \"8%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"REGION\",\n        width: \"8%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"REPORTED CLASSIFICATION\",\n        width: \"8%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"LAST EVALUATED\",\n        width: \"6%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"LAST UPDATED\",\n        width: \"6%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(VariantTableHeaderCell, {\n        name: \"MORE INFO\",\n        width: \"5%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, variantData.map(function (variant, idx) {\n        return React.createElement(Table.Row, {\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + geneCol,\n          val: variant[geneCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + dnaChangeCol,\n          val: variant[dnaChangeCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + proteinCol,\n          val: variant[proteinCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + aliasCol,\n          val: variant[aliasCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + regionCol,\n          val: variant[regionCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + reportedClassCol,\n          val: variant[reportedClassCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + lastEvalCol,\n          val: variant[lastEvalCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(DefaultVariantTableBodyCell, {\n          key: idx + lastUpdateCol,\n          val: variant[lastUpdateCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(VariantTableLinkCell, {\n          key: idx + urlCol,\n          url: variant[urlCol],\n          source: variant[sourceCol],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return VariantTable;\n}(Component);\n\nexport default withRouter(VariantTable);","map":{"version":3,"sources":["/Users/zachary/home/personal/code/invitae/variant-search-api/ui/src/components/VariantTable/VariantTable.js"],"names":["React","Component","Table","Loader","withRouter","geneCol","dnaChangeCol","proteinCol","aliasCol","regionCol","reportedClassCol","lastEvalCol","lastUpdateCol","urlCol","sourceCol","VariantTableHeaderCell","DefaultVariantTableBodyCell","VariantTableLinkCell","API","VariantTable","state","isLoading","variantData","componentDidMount","props","variantTable","getDefault","then","response","setState","data","variant_data","componentDidUpdate","prevProps","padding","map","variant","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Table, Loader } from 'semantic-ui-react';\nimport { withRouter } from 'react-router-dom';\n\n// components\nimport { geneCol, dnaChangeCol, proteinCol, aliasCol, regionCol, reportedClassCol, lastEvalCol, lastUpdateCol, urlCol, sourceCol } from '../../util/Settings';\nimport VariantTableHeaderCell from './VariantTableHeaderCell';\nimport { DefaultVariantTableBodyCell, VariantTableLinkCell } from './VariantTableBodyCell';\nimport API from '../../util/API';\n\n\nclass VariantTable extends Component {\n  state = {\n    isLoading: true,\n    variantData: null\n  };\n\n  componentDidMount = () => {\n    if (this.props.variantData === null) {\n      API.variantTable().getDefault().then(response =>  {\n        this.setState({\n          isLoading: false,\n          variantData: response.data.variant_data\n        })\n      })\n    } else {\n      this.setState({isLoading: false});\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.variantData !== prevProps.variantData) {\n      this.setState({\n        isLoading: false,\n        variantData: this.props.variantData\n      })\n    }\n  }\n\n  render() {\n    const { isLoading, variantData } = this.state;\n\n    if (isLoading) {\n      return <Loader active size='massive'/>;\n    }\n\n    return (\n      <Table sortable compact celled selectable striped size=\"small\" style={{padding: '0 25px 0 25px'}}>\n        <Table.Header>\n          <Table.Row>\n            <VariantTableHeaderCell name=\"GENE\" width=\"3%\"/>\n            <VariantTableHeaderCell name=\"NUCLEOTIDE CHANGE\" width=\"8%\"/>\n            <VariantTableHeaderCell name=\"PROTEIN CHANGE\" width=\"8%\"/>\n            <VariantTableHeaderCell name=\"ALIAS\" width=\"8%\"/>\n            <VariantTableHeaderCell name=\"REGION\" width=\"8%\"/>\n            <VariantTableHeaderCell name=\"REPORTED CLASSIFICATION\" width=\"8%\"/>\n            <VariantTableHeaderCell name=\"LAST EVALUATED\" width=\"6%\"/>\n            <VariantTableHeaderCell name=\"LAST UPDATED\" width=\"6%\"/>\n            <VariantTableHeaderCell name=\"MORE INFO\" width=\"5%\"/>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {variantData.map((variant, idx) => (\n            <Table.Row key={idx}>\n              <DefaultVariantTableBodyCell key={idx + geneCol} val={variant[geneCol]}/>\n              <DefaultVariantTableBodyCell key={idx + dnaChangeCol} val={variant[dnaChangeCol]}/>\n              <DefaultVariantTableBodyCell key={idx + proteinCol} val={variant[proteinCol]}/>\n              <DefaultVariantTableBodyCell key={idx + aliasCol} val={variant[aliasCol]}/>\n              <DefaultVariantTableBodyCell key={idx + regionCol} val={variant[regionCol]}/>\n              <DefaultVariantTableBodyCell key={idx + reportedClassCol} val={variant[reportedClassCol]}/>\n              <DefaultVariantTableBodyCell key={idx + lastEvalCol} val={variant[lastEvalCol]}/>\n              <DefaultVariantTableBodyCell key={idx + lastUpdateCol} val={variant[lastUpdateCol]}/>\n              <VariantTableLinkCell key={idx + urlCol} url={variant[urlCol]} source={variant[sourceCol]}/>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default withRouter(VariantTable);"]},"metadata":{},"sourceType":"module"}